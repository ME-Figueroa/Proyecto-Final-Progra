@using ProyectoProgra.Clases
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage

@page "/cancelacion"
<h3> Cancelación de boletos</h3>


@if (listaMesa != null && vips != null && generals != null && tribunas != null)
{
    <EditForm Model="devolucion" OnValidSubmit="Eliminar">
        <InputText @bind-Value="devolucion.nombre" placeholder="Nombre" class="form-control mb-2" />
        <InputNumber @bind-Value="devolucion.id" placeholder="Correlativo" class="form-control mb-2" />
        <button class="btn-danger" type="submit">Unirse a la cola</button>
    </EditForm>
}
else
{
    <p role="alert">Sorry, there's nothing at this address.</p>
}

@code {
    Devolucion devolucion = new Devolucion();
    private List<MesasPlatino> listaMesa = new List<MesasPlatino>();
    private List<VIP> vips = new List<VIP>();
    private List<General> generals = new List<General>();
    private List<Tribuna> tribunas = new List<Tribuna>();

    public void Eliminar()
    {
        devolucion.devoluciones.Push(devolucion);

        foreach (var mesa in listaMesa)
        {
            if (mesa.nombres == devolucion.nombre && mesa.correlativo==devolucion.id)
            {
                listaMesa.Remove(mesa);
                MesasPlatino.cantidadBoletosMesas++;
                localStorage.SetItem("cantidadBoletosMesas", MesasPlatino.cantidadBoletosMesas);
                localStorage.SetItem("mesas", listaMesa);
                break;
            }
        }

        foreach (var vip in vips)
        {
            if (vip.nombres == devolucion.nombre && vip.correlativo == devolucion.id)
            {
                vips.Remove(vip);
                VIP.cantidadBoletosVIP++;
                localStorage.SetItem("cantidadBoletosVIP", MesasPlatino.cantidadBoletosMesas);
                localStorage.SetItem("vips", vips);
                break;
            }
        }

        foreach (var general in generals)
        {
            if (general.nombres == devolucion.nombre && general.correlativo == devolucion.id)
            {
                generals.Remove(general);
                General.cantidadBoletosGeneral++;
                localStorage.SetItem("cantidadBoletosGeneral", General.cantidadBoletosGeneral);
                localStorage.SetItem("generales", generals);
                break;
            }
        }

        foreach (var tribuna in tribunas)
        {
            if (tribuna.nombres == devolucion.nombre && tribuna.correlativo == devolucion.id)
            {
                tribunas.Remove(tribuna);
                Tribuna.cantidadBoletosTribuna++;
                localStorage.SetItem("cantidadBoletosTribuna", Tribuna.cantidadBoletosTribuna);
                localStorage.SetItem("tribunas", tribunas);
                break;
            }
        }

        devolucion.devoluciones.Pop();
    }

    protected override async Task OnInitializedAsync()
    {
        var cantidadGuardada = localStorage.GetItem<int>("cantidadBoletosMesas");
        if (cantidadGuardada > 0)
        {
            MesasPlatino.cantidadBoletosMesas = cantidadGuardada;
        }

        var cantidadVIP = localStorage.GetItem<int>("cantidadBoletosVIP");
        if (cantidadVIP > 0)
        {
            VIP.cantidadBoletosVIP = cantidadVIP;
        }

        var cantidadGeneral = localStorage.GetItem<int>("cantidadBoletosGeneral");
        if (cantidadGeneral > 0)
        {
            General.cantidadBoletosGeneral = cantidadGeneral;
        }

        var cantidadTribuna = localStorage.GetItem<int>("cantidadBoletosTribuna");
        if (cantidadTribuna > 0)
        {
            Tribuna.cantidadBoletosTribuna = cantidadTribuna;
        }

        var mesasGuardadas = localStorage.GetItem<List<MesasPlatino>>("mesas");
        if (mesasGuardadas != null)
        {
            listaMesa = mesasGuardadas;
        }

        var boletosVIP = localStorage.GetItem<List<VIP>>("vips");
        if (boletosVIP != null)
        {
            vips = boletosVIP;
        }

        var boletosGeneral = localStorage.GetItem<List<General>>("generales");
        if (boletosGeneral != null)
        {
            generals = boletosGeneral;
        }

        var boletosTribuna = localStorage.GetItem<List<Tribuna>>("tribunas");
        if (boletosTribuna != null)
        {
            tribunas = boletosTribuna;
        }
    }
}
