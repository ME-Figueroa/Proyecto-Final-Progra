@using ProyectoProgra.Clases
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage

@page "/"
<h3 style="color:#4cdba6; font-weight:bold; text-align:center; margin:1.5rem 0;"> Compra de boletos en área General</h3>

@if (mensaje != null)
{
    <p><b>@mensaje</b></p>
}

<EditForm Model="boleto" OnValidSubmit="ComprarB">
    <InputText @bind-Value="boleto.nombres" placeholder="Nombres" class="form-control mb-2" />
    <InputText @bind-Value="boleto.apellidos" placeholder="Apellidos" class="form-control mb-2" />
    <InputText @bind-Value="boleto.dpi" placeholder="DPI" class="form-control mb-2" />
    <InputText @bind-Value="boleto.correoElectronico" placeholder="Correo" class="form-control mb-2" />
    <button class="btn btn-outline-success" type="submit">Unirse a la cola</button>
</EditForm>

<br />
<h5 class="mt-4">Boletos restantes: @General.cantidadBoletosGeneral</h5>
<img src="@imagen" />
<a href="@imagen" download="@($"_{boleto.nombres}.png")">Descargar</a>

@code {
    private General boleto = new General();
    private List<General> generals = new List<General>();
    Compra compras = new Compra();
    string mensaje = "";
    string imagen;

    private void Guardar()
    {
        generals.Add(boleto);
        localStorage.SetItem("generales", generals);
        compras.cola_general.Dequeue();
    }

    void ComprarB()
    {
        if (General.cantidadBoletosGeneral > 0)
        {
            // Asignar automáticamente el número de boleto (por cantidad de vendidos)
            int numeroAsignado = 80 - General.cantidadBoletosGeneral + 1;
            boleto.NumeroBoleto = numeroAsignado;

            boleto.correlativo = int.Parse(compras.generarCorrelativo(boleto.dpi, 4, numeroAsignado));
            compras.cola_general.Enqueue(boleto);
            General.cantidadBoletosGeneral--;

            localStorage.SetItem("cantidadBoletosGeneral", General.cantidadBoletosGeneral);
            mensaje = $"✅ Boleto emitido";
            imagen = compras.generarQR(boleto.correlativo.ToString());

            Guardar();
            StateHasChanged();
        }
        else
        {
            mensaje = "❌ Boletos agotados.";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var boletosGeneral = localStorage.GetItem<List<General>>("generales");

        if (boletosGeneral != null)
        {
            generals = boletosGeneral;
        }

        var cantidadGuardada = localStorage.GetItem<int>("cantidadBoletosGeneral");
        if (cantidadGuardada > 0)
        {
            General.cantidadBoletosGeneral = cantidadGuardada;
        }
    }
}

