@using ProyectoProgra.Clases
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage

@page "/Mesas"
<h3> Compra - Mesas Platino</h3>

@if (mensaje!=null)
{
    <p><b>@mensaje</b></p>
}

<EditForm Model="boleto" OnValidSubmit="ComprarB">
    <InputText @bind-Value="boleto.nombres" placeholder="Nombres" class="form-control mb-2" />
    <InputText @bind-Value="boleto.apellidos" placeholder="Apellidos" class="form-control mb-2" />
    <InputText @bind-Value="boleto.dpi" placeholder="DPI" class="form-control mb-2" />
    <InputText @bind-Value="boleto.correoElectronico" placeholder="Correo" class="form-control mb-2" />
    <InputNumber @bind-Value="boleto.NumeroMesa" placeholder="Número de mesa" class="form-control mb-2" />
    <button class="btn btn-primary" type="submit">Unirse a la cola</button>
</EditForm>
    
<br />
<h5 class="mt-4">Boletos restantes: @MesasPlatino.cantidadBoletosMesas</h5>
<br />
<img src="@imagen"/>
<a href="@imagen" download="@($"_{boleto.nombres}.png")">Descargar</a>
@code {
    private MesasPlatino boleto = new MesasPlatino();
    private List<MesasPlatino> mesas = new List<MesasPlatino>();
    Compra compras = new Compra();
    string mensaje = "";
    string imagen;

    private void Guardar()
    {
        mesas.Add(boleto);
        localStorage.SetItem("mesas", mesas);
        compras.cola_mesas.Dequeue();
    }

    void ComprarB()
    {
        if (MesasPlatino.cantidadBoletosMesas > 0)
        {
            boleto.correlativo = int.Parse(compras.generarCorrelativo(boleto.dpi,4,boleto.NumeroMesa));
            compras.cola_mesas.Enqueue(boleto);
            MesasPlatino.cantidadBoletosMesas--;
            localStorage.SetItem("cantidadBoletosMesas", MesasPlatino.cantidadBoletosMesas);
            mensaje = $"✅ Boleto emitido";
            Guardar();

            imagen = compras.generarQR(boleto.correlativo.ToString());
            StateHasChanged();
        }
        else
        {
            mensaje = "❌ Boletos agotados.";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        // Recuperar la lista de starships desde LocalStorage a una variable var
        var savedStarships = localStorage.GetItem<List<MesasPlatino>>("mesas");

        // Validar si la lista fue recuperada correctamente, copiarla a la lista
        if (savedStarships != null)
        {
            mesas = savedStarships;
        }
        var cantidadGuardada = localStorage.GetItem<int>("cantidadBoletosMesas");
        if (cantidadGuardada > 0)
        {
            MesasPlatino.cantidadBoletosMesas = cantidadGuardada;
        }
    }
}
